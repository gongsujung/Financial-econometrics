# probReview.r	
#
# R examples for probability concepts chapter
#
# Core R functions used:
#

# R packages/functions used
#
# mvtnorm
#   dmvnorm             density of multivariate normal
#   pmvnorm             CDF of multivariate normal
#   qmvnorm             quantiles of multivariate normal
#   rmvnorm             simulate random numbers from multivariate normal

# scatterplot3D
options(digits = 4)




#
# Exercise 1-1
#
# General normal distribution
#

# Microsoft: X ~ N(0.05, 0.1)
mu.r = 0.05
sd.r = 0.1
x.vals = seq(-0.25, 0.35, length=150)*sd.r + mu.r
plot(x.vals, dnorm(x.vals, mean=mu.r, sd=sd.r), type="l", lwd=2, 
     col="black", xlab="x", ylab="pdf")
pnorm(-0.5, mean=0.05, sd=0.1)
pnorm(0, mean=0.05, sd=0.1)
1 - pnorm(0.5, mean=0.05, sd=0.1)
1 - pnorm(1, mean=0.05, sd=0.1)

a.vals = c(0.01, 0.05, 0.95, 0.99)
qnorm(a.vals, mean=0.05, sd=0.1)


# Starbucks: Y ~ N(0.025, 0.05)
mu.r = 0.025
sd.r = 0.05
y.vals = seq(-0.25, 0.35, length=150)*sd.r + mu.r
plot(y.vals, dnorm(y.vals, mean=mu.r, sd=sd.r), type="l", lwd=2, 
     col="blue", xlab="y", ylab="pdf")
pnorm(-0.5, mean=0.025, sd=0.05)
pnorm(0, mean=0.025, sd=0.05)
1 - pnorm(0.5, mean=0.025, sd=0.05)
1 - pnorm(1, mean=0.025, sd=0.05)

a.vals = c(0.01, 0.05, 0.95, 0.99)
qnorm(a.vals, mean=0.025, sd=0.05)




#
# Exercise 1-2
#
# Example: risk-return tradeoff
#

# X ~ N(0.05, 0.1)
# Y ~ N(0.025, 0.05)
mu.r = 0.05
sd.r = 0.1
x.vals = seq(-3, 3, length=150)*sd.r + mu.r
plot(x.vals, dnorm(x.vals, mean=mu.r, sd=sd.r), type="l", lwd=2, 
     ylim=c(0, max(dnorm(x.vals, mean=0.025, sd=0.05))),
     col="black", xlab="x", ylab="pdf")
points(x.vals, dnorm(x.vals, mean=0.025, sd=0.05), type="l", lwd=2,
       col="blue", lty="dotted")
segments(0.05, 0, 0.05, dnorm(0.05, mean=0.05, sd=0.1), lwd=2)
segments(0.025, 0, 0.025, dnorm(0.025, mean=0.025, sd=0.05), lwd=2, 
         col="blue", lty="dotted")
legend(x="topleft", legend=c("Ms", "Starbucks"), lwd=2,
       col=c("black", "blue"), lty=c("solid","dotted"))
                   



#
# Exercise 2-1
#
# VaR example
#

mu.R = 0.04
sd.R = 0.09
w0 = 100000
q.01.R = mu.R + sd.R*qnorm(0.01)
q.05.R = mu.R + sd.R*qnorm(0.05)
VaR.01 = abs(q.01.R*w0)
VaR.05 = abs(q.05.R*w0)
VaR.01
VaR.05

#
# Value-at-Risk calculations
#

# Ms: R(t) ~ N(0.04, (0.09)^2)
# W = 100000
w0 = 100000
# plot return and wealth distributions
mu.R = 0.04
sd.R = 0.09
R.vals = seq(from=(mu.R - 3*sd.R), to=(mu.R + 3*sd.R), length = 100)
mu.w1 = 104000
sd.w1 = 9000
w1.vals = seq(from=(mu.w1 - 3*sd.w1), to=(mu.w1 + 3*sd.w1), length = 100)
par(mfrow=c(2,1))
# plot return density
plot(R.vals, dnorm(R.vals, mean=mu.R, sd=sd.R), type="l", 
     main="R(t) ~ N(0.04,(.09)^2)", xlab="R", ylab="pdf",
     lwd=2, col="blue")
# plot wealth density
plot(w1.vals, dnorm(w1.vals, mean=mu.w1, sd=sd.w1), type="l", 
     main="W1 ~ N(104000,(9000)^2)", xlab="W1", ylab="pdf",
     lwd=2, col="blue")
par(mfrow=c(1,1))




#
# VaR (5%)
#

# Pr(W1 < 90000)
pnorm(90000, mu.w1, sd.w1)
qnorm(pnorm(90000, mu.w1, sd.w1), mu.w1, sd.w1)
# compute 5% quantile of return and wealth distributions
q.R.05 = qnorm(0.05, mu.R, sd.R)
q.R.05
q.w1.05 = qnorm(0.05, mu.w1, sd.w1)
q.w1.05
# compute 5% VaR using return quantile
w0*q.R.05
# compute 5% VaR using wealth quantile
q.w1.05 - w0
# plot return and loss distributions with VaR
loss.vals = w0*R.vals
mu.loss = w0*mu.R
sd.loss = w0*sd.R
par(mfrow=c(2,1))
# plot return density
plot(R.vals, dnorm(R.vals, mean=mu.R, sd=sd.R), type="l", 
     main="R(t) ~ N(0.04,(.09)^2)", xlab="R", ylab="pdf",
     lwd=2, col="blue")
abline(v=q.R.05, lwd=2, col="red")     
# plot wealth density
plot(loss.vals, dnorm(loss.vals, mean=mu.loss, sd=sd.loss), type="l", 
     main="R*W0 ~ N(4000,(9,000)^2)", xlab="W0*R", ylab="pdf",
     lwd=2, col="blue")
abline(v=q.R.05*w0, lwd=2, col="red")       
par(mfrow=c(1,1))




#
# VaR (1%)
#

# Pr(W1 < 90000)
pnorm(90000, mu.w1, sd.w1)
qnorm(pnorm(90000, mu.w1, sd.w1), mu.w1, sd.w1)
# compute 1% quantile of return and wealth distributions
q.R.01 = qnorm(0.01, mu.R, sd.R)
q.R.01
q.w1.01 = qnorm(0.01, mu.w1, sd.w1)
q.w1.01
# compute 1% VaR using return quantile
w0*q.R.01
# compute 1% VaR using wealth quantile
q.w1.01 - w0
# plot return and loss distributions with VaR
loss.vals = w0*R.vals
mu.loss = w0*mu.R
sd.loss = w0*sd.R
par(mfrow=c(2,1))
# plot return density
plot(R.vals, dnorm(R.vals, mean=mu.R, sd=sd.R), type="l", 
     main="R(t) ~ N(0.04,(.09)^2)", xlab="R", ylab="pdf",
     lwd=2, col="blue")
abline(v=q.R.01, lwd=2, col="red")     
# plot wealth density
plot(loss.vals, dnorm(loss.vals, mean=mu.loss, sd=sd.loss), type="l", 
     main="R*W0 ~ N(4000,(9,000)^2)", xlab="W0*R", ylab="pdf",
     lwd=2, col="blue")
abline(v=q.R.01*w0, lwd=2, col="red")       
par(mfrow=c(1,1))




#
# Exercise 3-1
#
# month
#

mu.r = 0.04
sd.r = 0.09
q.01.R = exp(mu.r + sd.r*qnorm(0.01)) - 1
q.05.R = exp(mu.r + sd.r*qnorm(0.05)) - 1
VaR.01 = abs(q.01.R*w0)
VaR.05 = abs(q.05.R*w0)
VaR.01
VaR.05

#
# Value-at-Risk calculations 
#

# Ms: r(t) ~ iid N(0.04, (0.09)^2)
# W = 100000
w0 = 100000
# plot return and wealth distributions
mu.r = 0.04
sd.r = 0.09
r.vals = seq(from=(mu.r - 3*sd.r), to=(mu.r + 3*sd.r), length = 100)
mu.w1 = 104000
sd.w1 = 9000
w1.vals = seq(from=(mu.w1 - 3*sd.w1), to=(mu.w1 + 3*sd.w1), length = 100)
par(mfrow=c(2,1))
# plot return density
plot(r.vals, dnorm(r.vals, mean=mu.r, sd=sd.r), type="l", 
     main="r(t) ~ iid N(0.04,(.09)^2)", xlab="r", ylab="pdf",
     lwd=2, col="blue")
# plot wealth density
plot(w1.vals, dnorm(w1.vals, mean=mu.w1, sd=sd.w1), type="l", 
     main="W1 ~ iid N(104000,(9000)^2)", xlab="W1", ylab="pdf",
     lwd=2, col="blue")
par(mfrow=c(1,1))




#
# VaR (5%)
#

# Pr(W1 < 90000)
pnorm(90000, mu.w1, sd.w1)
qnorm(pnorm(90000, mu.w1, sd.w1), mu.w1, sd.w1)
# compute 5% quantile of return and wealth distributions
q.05.R = exp(qnorm(0.05, mu.r, sd.r)) - 1
q.05.R
q.05.w1 = exp(qnorm(0.05, mu.w1, sd.w1)) - 1
q.05.w1
# compute 5% VaR using return quantile
abs(q.05.R*w0)
# compute 5% VaR using wealth quantile
q.05.w1 - w0
# plot return and loss distributions with VaR
loss.vals = w0*r.vals
mu.loss = w0*mu.r
sd.loss = w0*sd.r
par(mfrow=c(2,1))
# plot return density
plot(r.vals, dnorm(r.vals, mean=mu.r, sd=sd.r), type="l", 
     main="r(t) ~ iid N(0.04,(.09)^2)", xlab="r", ylab="pdf",
     lwd=2, col="blue")
abline(v=q.05.R, lwd=2, col="red")     
# plot wealth density
plot(loss.vals, dnorm(loss.vals, mean=mu.loss, sd=sd.loss), type="l", 
     main="r*W0 ~ iid N(4000,(9,000)^2)", xlab="W0*r", ylab="pdf",
     lwd=2, col="blue")
abline(v=q.05.R*w0, lwd=2, col="red")       
par(mfrow=c(1,1))




#
# VaR (1%)
#

# Pr(W1 < 90000)
pnorm(90000, mu.w1, sd.w1)
qnorm(pnorm(90000, mu.w1, sd.w1), mu.w1, sd.w1)
# compute 1% quantile of return and wealth distributions
q.01.R = exp(qnorm(0.01, mu.r, sd.r)) - 1
q.01.R
q.01.w1 = exp(qnorm(0.01, mu.w1, sd.w1)) - 1
q.01.w1
# compute 1% VaR using return quantile
abs(q.01.R*w0)
# compute 1% VaR using wealth quantile
q.01.w1 - w0
# plot return and loss distributions with VaR
loss.vals = w0*r.vals
mu.loss = w0*mu.r
sd.loss = w0*sd.r
par(mfrow=c(2,1))
# plot return density
plot(r.vals, dnorm(r.vals, mean=mu.r, sd=sd.r), type="l", 
     main="r(t) ~ iid N(0.04,(.09)^2)", xlab="r", ylab="pdf",
     lwd=2, col="blue")
abline(v=q.01.R, lwd=2, col="red")     
# plot wealth density
plot(loss.vals, dnorm(loss.vals, mean=mu.loss, sd=sd.loss), type="l", 
     main="r*W0 ~ iid N(4000,(9,000)^2)", xlab="W0*r", ylab="pdf",
     lwd=2, col="blue")
abline(v=q.01.R*w0, lwd=2, col="red")       
par(mfrow=c(1,1))




#
# Exercise 3-2
#
# annual
#

mu.r = 0.04*12
sd.r = 0.09*sqrt(12)
q.01.R = exp(mu.r + sd.r*qnorm(0.01)) - 1
q.05.R = exp(mu.r + sd.r*qnorm(0.05)) - 1
VaR.01 = abs(q.01.R*w0)
VaR.05 = abs(q.05.R*w0)
VaR.01
VaR.05

#
# Value-at-Risk calculations 
#

# Ms: r(t) ~ iid N(0.04*12, ((0.09)*sqrt(12))^2)
# W = 100000
w0 = 100000
# plot return and wealth distributions
mu.r = 0.04*12
sd.r = 0.09*sqrt(12)
r.vals = seq(from=(mu.r - 3*sd.r), to=(mu.r + 3*sd.r), length = 100)
mu.w1 = 148000
sd.w1 = 31177
w1.vals = seq(from=(mu.w1 - 3*sd.w1), to=(mu.w1 + 3*sd.w1), length = 100)
par(mfrow=c(2,1))
# plot return density
plot(r.vals, dnorm(r.vals, mean=mu.r, sd=sd.r), type="l", 
     main="r(t) ~ iid N(0.04*12, ((0.09)*sqrt(12))^2)", xlab="r", ylab="pdf",
     lwd=2, col="blue")
# plot wealth density
plot(w1.vals, dnorm(w1.vals, mean=mu.w1, sd=sd.w1), type="l", 
     main="W1 ~ iid N(148000,(31177)^2)", xlab="W1", ylab="pdf",
     lwd=2, col="blue")
par(mfrow=c(1,1))




#
# VaR (5%)
#

# Pr(W1 < 90000)
pnorm(90000, mu.w1, sd.w1)
qnorm(pnorm(90000, mu.w1, sd.w1), mu.w1, sd.w1)
# compute 5% quantile of return and wealth distributions
q.05.R = exp(qnorm(0.05, mu.r, sd.r)) - 1
q.05.R
q.05.w1 = exp(qnorm(0.05, mu.w1, sd.w1)) - 1
q.05.w1
# compute 5% VaR using return quantile
abs(q.05.R*w0)
# compute 5% VaR using wealth quantile
q.05.w1 - w0
# plot return and loss distributions with VaR
loss.vals = w0*r.vals
mu.loss = w0*mu.r
sd.loss = w0*sd.r
par(mfrow=c(2,1))
# plot return density
plot(r.vals, dnorm(r.vals, mean=mu.r, sd=sd.r), type="l", 
     main="r(t) ~ iid N(0.04*12, ((0.09)*sqrt(12))^2)", xlab="r", ylab="pdf",
     lwd=2, col="blue")
abline(v=q.05.R, lwd=2, col="red")     
# plot wealth density
plot(loss.vals, dnorm(loss.vals, mean=mu.loss, sd=sd.loss), type="l", 
     main="r*W0 ~ iid N(148000,(31177)^2)", xlab="W0*r", ylab="pdf",
     lwd=2, col="blue")
abline(v=q.05.R*w0, lwd=2, col="red")       
par(mfrow=c(1,1))




#
# VaR (1%)
#

# Pr(W1 < 90000)
pnorm(90000, mu.w1, sd.w1)
qnorm(pnorm(90000, mu.w1, sd.w1), mu.w1, sd.w1)
# compute 1% quantile of return and wealth distributions
q.01.R = exp(qnorm(0.01, mu.r, sd.r)) - 1
q.01.R
q.01.w1 = exp(qnorm(0.01, mu.w1, sd.w1)) - 1
q.01.w1
# compute 1% VaR using return quantile
abs(q.01.R*w0)
# compute 1% VaR using wealth quantile
q.01.w1 - w0
# plot return and loss distributions with VaR
loss.vals = w0*r.vals
mu.loss = w0*mu.r
sd.loss = w0*sd.r
par(mfrow=c(2,1))
# plot return density
plot(r.vals, dnorm(r.vals, mean=mu.r, sd=sd.r), type="l", 
     main="r(t) ~ iid N(0.04*12, ((0.09)*sqrt(12))^2)", xlab="r", ylab="pdf",
     lwd=2, col="blue")
abline(v=q.01.R, lwd=2, col="red")     
# plot wealth density
plot(loss.vals, dnorm(loss.vals, mean=mu.loss, sd=sd.loss), type="l", 
     main="r*W0 ~ iid N(148000,(31177)^2)", xlab="W0*r", ylab="pdf",
     lwd=2, col="blue")
abline(v=q.01.R*w0, lwd=2, col="red")       
par(mfrow=c(1,1))
